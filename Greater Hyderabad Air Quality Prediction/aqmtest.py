# -*- coding: utf-8 -*-
"""AQMTEST.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wLKTBMSfCk9v99Wv4HSxa_JZov2Tn8Mp
"""

import pickle
import numpy as np
import pandas as pd

model = pickle.load(open('model.pkl','rb'))
class_names=['27.9','31.5','20.6','1011.5','8.5']

def predict(df):

  df = df[["T", "TM", "Tm", "SLP" ,"V"]]
  
  numpy_array=df.to_numpy()
 
  predictions=model.predict(numpy_array)
  
  output=[class_names[class_predict] for class_predict in predictions]
  print(ouput)
  return output

import pickle
import numpy as np
import pandas as pd
from pathlib import Path
root = Path("/var/colab")
my_path = root/"model.pkl"
model = pickle.load(open('model.pkl', 'rb'))
class_names = ['setosa', 'versicolor', 'virginica']

def predict(df):
	df = df[["SepalLengthCm", "SepalWidthCm", "PetalLengthCm", "PetalWidthCm"]]

	numpy_array = df.to_numpy()
	# Predict
	predictions = model.predict(numpy_array)
	#return str(predictions)
	output = [class_names[class_predicted] for class_predicted in predictions]
	return output

import numpy as np
import pandas as pd
import pickle


pickle_in = open("Random_forest_regressor.pkl","rb")
random_forest_regressor=pickle.load(pickle_in)

def predict(df):
  df=df[['T','TM','Tm','SLP','H','VV','V','VM','PM 2.5']]
  df1=df.iloc[:,[0,1,2,3,6]]
  predictions=random_forest_regressor.predict(df1)[0]
  print(predictions)
  return predictions

  
  ##return output

def main():
  combine_data= pd.read_csv(r'Real_combine.csv')
  predict(combine_data)
  
if __name__=='__main__':
    main()

import numpy as np
import pandas as pd
import pickle


pickle_in = open("Random_forest_regressor.pkl","rb")
random_forest_regressor=pickle.load(pickle_in)

df = pd.read_csv('data.csv',index_col=0,parse_dates=[0])
df.head()

import numpy as np
import pandas as pd
import pickle


pickle_in = open("Random_forest_regressor.pkl","rb")
random_forest_regressor=pickle.load(pickle_in)
class_names=[ '27.9','31.5','20','1011.5','8.5']


def predict(df):

  df = df[['T', 'TM', 'Tm', 'SLP' ,'V']]
  
  predictions=random_forest_regressor.predict(df)
  print(predictions)
  return predictions
 
def main():
  predict(class_names)
  
if __name__=='__main__':
    main()

import pickle
import numpy as np
import pandas as pd

model = pickle.load(open('mod.pkl', 'rb'))
class_names = ['setosa', 'versicolor', 'virginica']

def predict(df):
	df = df[["SepalLengthCm", "SepalWidthCm", "PetalLengthCm", "PetalWidthCm"]]

	numpy_array = df.to_numpy()
	# Predict
	predictions = model.predict(numpy_array)
	#return str(predictions)
	output = [class_names[class_predicted] for class_predicted in predictions]
	return output

def main():
  predict(class_names)
  
if __name__=='__main__':
    main()



class_names = ['Good','Worst']
def predict(df):
        df = df[['T', 'TM', 'Tm', 'SLP' ,'V']]
        df.T = encode1.transform(df.T)
        df.TM = encode2.transform(df.TM)
        df.Tm = encode3.transform(df.Tm)
        df.SLP = encode4.transform(df.SLP)
        df.V = encode5.transform(df.V)
        numpy_array = df.to_numpy()
        # Predict
        
        numpy_array = scaler.transform(numpy_array)
        predictions = model.predict(numpy_array)
        
        #return str(predictions)
        output = [class_names[class_predicted] for class_predicted in predictions]
        return output

import numpy as np
import pandas as pd
import pickle


pickle_in = open("Random_forest_regressor.pkl","rb")
model=pickle.load(pickle_in)
class_names=[ '27.9','31.5','20','1011.5','8.5']


def predict(df):

  df = df[['T', 'TM', 'Tm', 'SLP' ,'V']]
  numpy_array = df.to_numpy()
  
  predictions=model.predict(numpy_array)
  output = [class_names[class_predicted] for class_predicted in predictions]
  print(predictions)
  return output
 
def main():
  predict(class_names)
  
if __name__=='__main__':
    main()

